{
  "openapi": "3.0.0",
  "info": {
    "title": "care-pets",
    "description": "Pets Finder Site Database ",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://pets-back-end.vercel.app/api"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "friends",
      "description": "Operations about friends"
    },
    {
      "name": "news",
      "description": "Operations about news"
    },
    {
      "name": "pet",
      "description": "Everything about your Pets"
    },
    {
      "name": "notices",
      "description": "Everything about notices"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "409": {
            "description": "User with this email address already exists"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginRequest"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "401": {
            "description": "token type is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get current user in user session",
        "operationId": "currentUser",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user information",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUserAvatar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "401": {
            "description": "Enter correct data"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user avatar",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "requestBody": {
          "description": "Select the parameter(s) you want to change. Delete the rest.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserAvatar"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "401": {
            "description": "Enter correct data"
          },
          "500": {
            "description": "Cannot destructure property path of fileToUpload as it is undefined."
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/pets": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all user pets",
        "description": "Returns a map of news codes to quantities",
        "operationId": "getUserPet",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPet"
                  }
                }
              }
            }
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/friends": {
      "get": {
        "tags": [
          "friends"
        ],
        "summary": "Get all friends",
        "description": "Returns a map of friends codes to quantities",
        "operationId": "getFriends",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Friends"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": [
          "news"
        ],
        "summary": "Get all news",
        "description": "Returns a map of news codes to quantities",
        "operationId": "getNews",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pets": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet",
        "description": "Add a new pet to the store and to user pets list",
        "operationId": "addUserPet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pets_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/pets/{petId}/avatars": {
      "patch": {
        "tags": [
          "pet"
        ],
        "summary": "Change pets avatar",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "pet id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "requestBody": {
          "description": "Upload photo",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserAvatar"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPet"
                }
              }
            }
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/pets/{petId}": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Get pet by id",
        "description": "Get pet by id",
        "operationId": "userPet",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "pet id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPet"
                }
              }
            }
          },
          "400": {
            "description": "{petId} has not correct format"
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Delete pet by id",
        "description": "Delete pet by id",
        "operationId": "DeleteuserPet",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "pet id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPetDel"
                }
              }
            }
          },
          "400": {
            "description": "{petId} has not correct format"
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "patch": {
        "tags": [
          "pet"
        ],
        "summary": "Change pet details",
        "description": "Change pet details",
        "operationId": "userPetChange",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "pet id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pets_body"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPet"
                }
              }
            }
          },
          "400": {
            "description": "{petId} has not correct format"
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/notices": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Get a list all notices",
        "description": "Get a list all notices",
        "operationId": "getAllNotices",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PetNotis"
                  }
                }
              }
            }
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/notices/category/{category}": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Get a list notices",
        "description": "Get a list notices sort by category",
        "operationId": "getNoticesByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "notices category [ lostFound | inGoodHands | sell ]",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "sell"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "notices"
        ],
        "summary": "Add a new notice",
        "description": "Add a new notice in the store",
        "operationId": "postNotice",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "notices category [ lostFound | inGoodHands | sell ]",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "sell"
            }
          }
        ],
        "requestBody": {
          "description": "For category \"inGoodHands\", delete  the price field.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPetIngood"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserPetAvatar"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotis"
                }
              }
            }
          },
          "400": {
            "description": "has not correct format"
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/notices/myNotices": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Get notices by user",
        "description": "receiving ads of an authorized user created by the same user",
        "operationId": "myNotices",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotis"
                }
              }
            }
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/notices/myNotices/{noticeId}": {
      "delete": {
        "tags": [
          "notices"
        ],
        "summary": "Delete notices by id",
        "description": "Delete notices by id",
        "operationId": "DeleteUserNotices",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "notices id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotisesDel"
                }
              }
            }
          },
          "401": {
            "description": "jwt token is not valid"
          },
          "404": {
            "description": "Not found"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/notices/favorites": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Get favorites notices by user",
        "description": "receiving ads of the authorized user added by him to the favorites",
        "operationId": "favoritesNotices",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotis"
                }
              }
            }
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/notices/favorites/{noticeId}": {
      "post": {
        "tags": [
          "notices"
        ],
        "summary": "Add ad to favorites by user",
        "description": "Add ad to favorites by user",
        "operationId": "postFavorites",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "notices id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "400": {
            "description": "has not correct format"
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": [
          "notices"
        ],
        "summary": "Delete to favorites by user",
        "description": "Delete  to favorites by user",
        "operationId": "deleteFavorites",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "notices id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_201"
                }
              }
            }
          },
          "400": {
            "description": "has not correct format"
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/notices/{noticeId}": {
      "get": {
        "tags": [
          "notices"
        ],
        "summary": "Getting one ad by id",
        "description": "Getting one ad by id",
        "operationId": "getNotisesById",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "notices id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PetNotisId"
                }
              }
            }
          },
          "400": {
            "description": "has not correct format"
          }
        }
      }
    },
    "/notices/{noticeId}/imageUrl": {
      "patch": {
        "tags": [
          "notices"
        ],
        "summary": "Change notis image",
        "description": "Change notis image",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "description": "notice id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Id"
            }
          }
        ],
        "requestBody": {
          "description": "Upload photo",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/NotisIMG"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotisIMGResponses"
                }
              }
            }
          },
          "400": {
            "description": "has not correct format"
          },
          "401": {
            "description": "jwt token is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Age": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "days": {
            "type": "string",
            "example": "22"
          },
          "months": {
            "type": "string",
            "example": "0"
          },
          "years": {
            "type": "string",
            "example": "3"
          }
        }
      },
      "Id": {
        "type": "string",
        "example": "893386768g864sashad83e59"
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Sasha"
          },
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "password": {
            "type": "string",
            "example": "1234567"
          },
          "phone": {
            "type": "string",
            "example": "+380675553322"
          },
          "city": {
            "type": "string",
            "example": "Kharkiv, Kharkiv"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "password": {
            "type": "string",
            "example": "1234567"
          }
        }
      },
      "SuccessUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Sasha"
          },
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "phone": {
            "type": "string",
            "example": "+380675553322"
          },
          "city": {
            "type": "string",
            "example": "Kharkiv, Kharkiv"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://res.cloudinary.com/dwwvmul1w/image/upload/v1676815733/pets-project/avatars/63f0f6500eb951a144761ab4.png"
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "users": {
            "$ref": "#/components/schemas/UserLoginRequest_users"
          }
        }
      },
      "UserAvatar": {
        "type": "object",
        "properties": {
          "avatar": {
            "type": "string",
            "description": "upload photo",
            "format": "binary"
          }
        }
      },
      "UserPet": {
        "required": [
          "breed",
          "image",
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "type": "string",
            "example": "Murka"
          },
          "breed": {
            "type": "string",
            "example": "Persian"
          },
          "birthDate": {
            "type": "string",
            "example": "00.00.0000"
          },
          "comments": {
            "type": "string",
            "example": "It is a good cat"
          },
          "image": {
            "type": "string",
            "example": "https://www.purina.co.uk/sites/default/files/styles/square_medium_440x440/public/2022-06/Persian-Long-Hair.jpg?itok=OEork2Dh"
          },
          "owner": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "UserPetAvatar": {
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UserPetIngood": {
        "required": [
          "breed",
          "comment",
          "dateOfBirth",
          "petName",
          "sex",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Prodam koshku bad"
          },
          "petName": {
            "type": "string",
            "example": "Murka"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "2020-02-02"
          },
          "breed": {
            "type": "string",
            "example": "Persian"
          },
          "sex": {
            "type": "string",
            "description": "male or female",
            "example": "female"
          },
          "location": {
            "type": "string",
            "example": "Kharkiv"
          },
          "price": {
            "type": "string",
            "example": "45"
          },
          "imageUrl": {
            "type": "string"
          },
          "comment": {
            "type": "string",
            "example": "It is a good"
          }
        }
      },
      "UserPetDel": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "pet deleted"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "Pet": {
        "required": [
          "location",
          "price",
          "sex",
          "titleOfAd"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "titleOfAd": {
            "type": "string",
            "example": "PRODAM koshku"
          },
          "namePet": {
            "type": "string",
            "example": "Murka"
          },
          "breed": {
            "type": "string",
            "example": "Persian"
          },
          "sex": {
            "type": "string",
            "example": "male of female"
          },
          "location": {
            "type": "string",
            "example": "sity"
          },
          "price": {
            "type": "string",
            "example": "300$"
          },
          "category": {
            "type": "string",
            "example": "sell"
          },
          "comments": {
            "type": "string",
            "example": "It is a good cat"
          },
          "owner": {
            "$ref": "#/components/schemas/Id"
          },
          "image": {
            "type": "string",
            "example": "https://www.purina.co.uk/sites/default/files/styles/square_medium_440x440/public/2022-06/Persian-Long-Hair.jpg?itok=OEork2Dh"
          }
        }
      },
      "PetNotis": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "title": {
            "type": "string",
            "example": "Prodam koshku"
          },
          "category": {
            "type": "string",
            "example": "sell"
          },
          "petName": {
            "type": "string",
            "example": "Murka"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "2020-02-02"
          },
          "breed": {
            "type": "string",
            "example": "Persian"
          },
          "sex": {
            "type": "string",
            "example": "male of female"
          },
          "location": {
            "type": "string",
            "example": "sity"
          },
          "price": {
            "type": "string",
            "example": "300$"
          },
          "image": {
            "type": "string",
            "example": "https://www.purina.co.uk/sites/default/files/styles/square_medium_440x440/public/2022-06/Persian-Long-Hair.jpg?itok=OEork2Dh"
          },
          "comments": {
            "type": "string",
            "example": "It is a good cat"
          },
          "age": {
            "$ref": "#/components/schemas/Age"
          }
        }
      },
      "PetNotisId": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/PetNotis"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "phone": {
            "type": "string",
            "example": "380675553322"
          }
        }
      },
      "NotisesDel": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "notises deleted"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "NotisIMG": {
        "type": "object",
        "properties": {
          "notice": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "NotisIMGResponses": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "data": {
            "type": "string",
            "example": "https://res.cloudinary.com/dwwvmul1w/image/upload/v1677184241/pets-project/notices/63f77ac43b6b04fe2739bcd2.png"
          }
        }
      },
      "Friends": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "title": {
            "type": "string",
            "example": "Purina"
          },
          "url": {
            "type": "string",
            "example": "https://www.purina.ua/"
          },
          "addressUrl": {
            "type": "string",
            "example": "https://goo.gl/maps/P6YvmtdsCQqFzyQz7"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://www.purina.ua/sites/default/files/2018-08/Hero_Image_C4_Purina_history_0.jpghttps://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
          },
          "address": {
            "type": "string",
            "example": "Kyiv, Kyiv Oblast, Ukraine"
          },
          "phone": {
            "type": "string",
            "example": "1-800-788-7462"
          },
          "email": {
            "type": "string",
            "example": "info@ua.nestle.com"
          },
          "workDays": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "example": {
                    "isOpen": false
                  }
                },
                {
                  "type": "object",
                  "example": {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "16:00"
                  }
                }
              ]
            }
          }
        }
      },
      "News": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "title": {
            "type": "string",
            "example": "Обережно, кліщі! Як уберегти улюбленця від неприємностей?"
          },
          "url": {
            "type": "string",
            "example": "https://www.kmlvm.com.ua/oberezhno-klishhi-yak-uberegty-ulyublentsya-vid-nepryyemnostej/"
          },
          "description": {
            "type": "string",
            "example": "Травневі прогулянки з улюбленцем не лише приємні..."
          },
          "date": {
            "type": "string",
            "example": "2022-05-04"
          }
        }
      },
      "UsersUpdateBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "Sasha",
            "example": "Vasya"
          },
          "email": {
            "type": "string",
            "format": "Sasha@email.com",
            "example": "Vasya@email.com"
          },
          "city": {
            "type": "string",
            "format": "Kharkiv, Kharkiv",
            "example": "Poltsva, Poltava"
          },
          "phone": {
            "type": "string",
            "format": "+380675553322",
            "example": "+380679876543"
          },
          "birthday": {
            "type": "string",
            "format": "00.00.0000",
            "example": "12.03.2020"
          }
        }
      },
      "pets_body": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "example": "Мурка"
          },
          "breed": {
            "type": "string",
            "example": "Перс"
          },
          "comment": {
            "type": "string",
            "example": "хороший кот"
          },
          "birthday": {
            "type": "string",
            "example": "2020-12-01"
          }
        }
      },
      "UserLoginRequest_users": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "name": {
            "type": "string",
            "example": "Sasha"
          }
        }
      },
      "inline_response_201": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "sucsess"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Enter a valid token.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}