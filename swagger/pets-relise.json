{
  "openapi": "3.0.0",
  "info": {
    "title": "care-pets",
    "description": "Pets Finder Site Database ",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/Aleksandor2138/pets-docs/1.0.11",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://pets-back-end.vercel.app/api"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "friends",
      "description": "Operations about friends"
    },
    {
      "name": "news",
      "description": "Operations about news"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "409": {
            "description": "User with this email address already exists"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginRequest"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter a valid token.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "401": {
            "description": "token type is not valid"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get current user in user session",
        "operationId": "currentUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter a valid token.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user information",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUserAvatar",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter a valid token.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UsersUpdateBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "401": {
            "description": "Enter correct data"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/users/avatars": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update user avatar",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Enter a valid token.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          }
        ],
        "requestBody": {
          "description": "Select the parameter(s) you want to change. Delete the rest.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserAvatar"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessUser"
                }
              }
            }
          },
          "401": {
            "description": "Enter correct data"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/friends": {
      "get": {
        "tags": [
          "friends"
        ],
        "summary": "Get all friends",
        "description": "Returns a map of friends codes to quantities",
        "operationId": "getFriends",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Friends"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": [
          "news"
        ],
        "summary": "Get all news",
        "description": "Returns a map of news codes to quantities",
        "operationId": "getNews",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/News"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Token": {
        "required": [
          "token"
        ],
        "properties": {
          "token": {
            "type": "string",
            "example": "Bearer \"token\""
          }
        }
      },
      "Id": {
        "type": "string",
        "example": "893386768g864sashad83e59"
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Sasha"
          },
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "password": {
            "type": "string",
            "example": "1234567"
          },
          "phone": {
            "type": "string",
            "example": "+380675553322"
          },
          "city": {
            "type": "string",
            "example": "Kharkiv, Kharkiv"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "password": {
            "type": "string",
            "example": "1234567"
          }
        }
      },
      "SuccessUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Sasha"
          },
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "phone": {
            "type": "string",
            "example": "+380675553322"
          },
          "city": {
            "type": "string",
            "example": "Kharkiv, Kharkiv"
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "avatarURL": {
            "type": "string",
            "example": "https://res.cloudinary.com/dwwvmul1w/image/upload/v1676815733/pets-project/avatars/63f0f6500eb951a144761ab4.png"
          }
        }
      },
      "SuccessUserUpdate": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "type": "string",
            "example": "Sasha"
          },
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "password": {
            "type": "string",
            "example": "1234567"
          },
          "phone": {
            "type": "string",
            "example": "+380675553322"
          },
          "city": {
            "type": "string",
            "example": "Kharkiv, Kharkiv"
          },
          "favorite": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "pets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "birthday": {
            "type": "string",
            "example": "00.00.0000"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZGFlZGU2YjZiOGI2ZDVjMzdjY2VlMCIsImlhdCI6MTY3NTU0NDQ3MSwiZXhwIjoxNjc1NTY2MDcxfQ.K_BypzmTadfn2X4bEHLKl7CtaAwhxdxTB_xhj3zdO7o"
          },
          "image": {
            "type": "string",
            "example": "https://i.pinimg.com/originals/f1/0f/f7/f10ff70a7155e5ab666bcdd1b45b726d.jpg"
          }
        }
      },
      "UserLoginRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "users": {
            "$ref": "#/components/schemas/UserLoginRequest_users"
          }
        }
      },
      "UserAvatar": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "upload photo",
            "format": "binary"
          }
        }
      },
      "UserPet": {
        "required": [
          "breed",
          "image",
          "name"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "type": "string",
            "example": "Murka"
          },
          "breed": {
            "type": "string",
            "example": "Persian"
          },
          "birthDate": {
            "type": "string",
            "example": "00.00.0000"
          },
          "comments": {
            "type": "string",
            "example": "It is a good cat"
          },
          "image": {
            "type": "string",
            "example": "https://www.purina.co.uk/sites/default/files/styles/square_medium_440x440/public/2022-06/Persian-Long-Hair.jpg?itok=OEork2Dh"
          },
          "owner": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "Pet": {
        "required": [
          "location",
          "price",
          "sex",
          "titleOfAd"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "titleOfAd": {
            "type": "string",
            "example": "PRODAM koshku"
          },
          "namePet": {
            "type": "string",
            "example": "Murka"
          },
          "breed": {
            "type": "string",
            "example": "Persian"
          },
          "sex": {
            "type": "string",
            "example": "male of female"
          },
          "location": {
            "type": "string",
            "example": "sity"
          },
          "price": {
            "type": "string",
            "example": "300$"
          },
          "category": {
            "type": "string",
            "example": "sell"
          },
          "comments": {
            "type": "string",
            "example": "It is a good cat"
          },
          "owner": {
            "$ref": "#/components/schemas/Id"
          },
          "image": {
            "type": "string",
            "example": "https://www.purina.co.uk/sites/default/files/styles/square_medium_440x440/public/2022-06/Persian-Long-Hair.jpg?itok=OEork2Dh"
          }
        }
      },
      "City": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "city": {
            "type": "string",
            "example": "Kharkiv"
          },
          "region": {
            "type": "string",
            "example": "Kharkivs’ka Oblast’"
          }
        }
      },
      "Breed": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "breed": {
            "type": "string",
            "example": "Persian"
          }
        }
      },
      "Friends": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "title": {
            "type": "string",
            "example": "Purina"
          },
          "url": {
            "type": "string",
            "example": "https://www.purina.ua/"
          },
          "addressUrl": {
            "type": "string",
            "example": "https://goo.gl/maps/P6YvmtdsCQqFzyQz7"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://www.purina.ua/sites/default/files/2018-08/Hero_Image_C4_Purina_history_0.jpghttps://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png"
          },
          "address": {
            "type": "string",
            "example": "Kyiv, Kyiv Oblast, Ukraine"
          },
          "phone": {
            "type": "string",
            "example": "1-800-788-7462"
          },
          "email": {
            "type": "string",
            "example": "info@ua.nestle.com"
          },
          "workDays": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "example": {
                    "isOpen": false
                  }
                },
                {
                  "type": "object",
                  "example": {
                    "isOpen": true,
                    "from": "09:00",
                    "to": "16:00"
                  }
                }
              ]
            }
          }
        }
      },
      "News": {
        "type": "object",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/Id"
          },
          "title": {
            "type": "string",
            "example": "Обережно, кліщі! Як уберегти улюбленця від неприємностей?"
          },
          "url": {
            "type": "string",
            "example": "https://www.kmlvm.com.ua/oberezhno-klishhi-yak-uberegty-ulyublentsya-vid-nepryyemnostej/"
          },
          "description": {
            "type": "string",
            "example": "Травневі прогулянки з улюбленцем не лише приємні..."
          },
          "date": {
            "type": "string",
            "example": "2022-05-04"
          }
        }
      },
      "UsersUpdateBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "Sasha",
            "example": "Vasya"
          },
          "email": {
            "type": "string",
            "format": "Sasha@email.com",
            "example": "Vasya@email.com"
          },
          "city": {
            "type": "string",
            "format": "Kharkiv, Kharkiv",
            "example": "Poltsva, Poltava"
          },
          "phone": {
            "type": "string",
            "format": "+380675553322",
            "example": "+380679876543"
          },
          "birthday": {
            "type": "string",
            "format": "00.00.0000",
            "example": "12.03.2020"
          }
        }
      },
      "inline_response_400": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "q length must be at least 3 characters long | q is required"
          }
        }
      },
      "pets_body": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "format": "Aqko"
          },
          "breed": {
            "type": "string",
            "format": "Husky"
          },
          "comments": {
            "type": "string",
            "format": "It is a good dog"
          },
          "birthDate": {
            "type": "string",
            "format": "00.00.0000"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Pet deleted"
          }
        }
      },
      "notices_body": {
        "type": "object",
        "properties": {
          "namePet": {
            "type": "string",
            "format": "Aqko"
          },
          "breed": {
            "type": "string",
            "format": "Husky"
          },
          "sex": {
            "type": "string",
            "format": "male of female"
          },
          "location": {
            "type": "string",
            "format": "selo"
          },
          "price": {
            "type": "string",
            "format": "5000$"
          },
          "category": {
            "type": "string",
            "format": "'lost/found' | 'in good hands' | 'sell'"
          },
          "comments": {
            "type": "string",
            "format": "It is a good dog"
          },
          "birthDate": {
            "type": "string",
            "format": "00.00.0000"
          },
          "image": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "UserLoginRequest_users": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "Sasha@email.com"
          },
          "name": {
            "type": "string",
            "example": "Sasha"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "description": "Enter a valid token.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}